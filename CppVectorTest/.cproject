<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.269604652">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.269604652" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.269604652" name="Debug" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.269604652." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.1191922097" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.687945679" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/CppVectorTest}/Debug" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.1347560266" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.1462326292" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.1716928665" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.947880986" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.372828730" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.120217245" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1437864948" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1568203811" superClass="llvm.c_cpp.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppVectorLib}&quot;"/>
									<listOptionValue builtIn="false" value="/home/algorithm/algorithms_and_data_structures/programs/CppVector/CppVectorLib/../../CppContainerCommon/include"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1512722764" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.1997480178" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1815973427" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1669537363" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.1792562531" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.535712404" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppVectorLib}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/include&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.300735256" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.200319903" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.437251015" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.458696914" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1152595313" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.1669935236" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest_main"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="pthread"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.1109847798" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/5/"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/lib/debug&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1715453152" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings">
				<externalSettings containerId="CppVectorLib;cdt.managedbuild.config.llvm.clang.linux.lib.debug.1021653386" factoryId="org.eclipse.cdt.core.cfg.export.settings.sipplier">
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppVectorLib"/>
						<entry flags="RESOLVED" kind="includePath" name="/home/algorithm/algorithms_and_data_structures/programs/CppVector/CppVectorLib/../../CppContainerCommon/include"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppVectorLib/Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppVectorLib" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
			</storageModule>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1951502313">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1951502313" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1951502313" name="Release" parent="cdt.managedbuild.config.llvm.clang.linux.exe.release">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1951502313." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release.1981542311" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release.1090749399" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release"/>
							<builder buildPath="${workspace_loc:/CppVectorTest}/Release" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release.1719460242" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release.1860925162" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.113881149" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release.1055684172" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1368655929" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1366629204" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.155207654" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1833105179" superClass="llvm.c_cpp.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppVectorLib}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1036285341" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release.269408658" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1876070329" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1857687326" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.432294477" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.186501923" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppVectorLib}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/include&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.507890633" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release.2042154138" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1561267585" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release.2040385373" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.187959690" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.2049362555" name="Libraries (-l)" superClass="llvm.c.link.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest_main"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="pthread"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.1403657686" name="Library search path (-L)" superClass="llvm.c.link.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/5/"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/lib/release&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.149002089" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings">
				<externalSettings containerId="CppVectorLib;cdt.managedbuild.config.llvm.clang.linux.lib.release.422056781" factoryId="org.eclipse.cdt.core.cfg.export.settings.sipplier">
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppVectorLib"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppVectorLib/Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppVectorLib" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
			</storageModule>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="CppVectorTest.cdt.managedbuild.target.llvm.clang.linux.exe.885176726" name="Executable" projectType="cdt.managedbuild.target.llvm.clang.linux.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
</cproject>
