<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.lib.debug.1021653386">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.lib.debug.1021653386" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppVectorLib"/>
						<entry flags="RESOLVED" kind="includePath" name="/home/algorithm/algorithms_and_data_structures/programs/CppVector/CppVectorLib/../../CppContainerCommon/include"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppVectorLib/Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppVectorLib" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="a" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.staticLib,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" errorParsers="org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.config.llvm.clang.linux.lib.debug.1021653386" name="Debug" parent="cdt.managedbuild.config.llvm.clang.linux.lib.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.lib.debug.1021653386." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.lib.debug.1837570207" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.lib.debug">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="cdt.managedbuild.target.llvm.clang.linux.platform.lib.debug.385724900" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.lib.debug"/>
							<builder buildPath="${workspace_loc:/CppVectorLib}/Debug" id="cdt.managedbuild.target.llvm.clang.linux.builder.lib.debug.258863387" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.lib.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.debug.1035700066" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.724038429" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.debug.1410867413" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.21964977" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1581440481" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1578327693" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1720099825" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppContainerCommon}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.2096922383" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.debug.519835736" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1534186453" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.169424004" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.1869286653" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.2006740007" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppContainerCommon}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../CppContainerCommon/include&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.584590674" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.debug.1594735658" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.debug.657574814" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.debug"/>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings">
				<externalSettings containerId="CppContainerCommon;cdt.managedbuild.config.llvm.clang.linux.lib.debug.1058502384" factoryId="org.eclipse.cdt.core.cfg.export.settings.sipplier">
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppContainerCommon"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppContainerCommon/Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppContainerCommon" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
			</storageModule>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.lib.release.422056781">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.lib.release.422056781" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppVectorLib"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppVectorLib/Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppVectorLib" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="a" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.staticLib,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" errorParsers="org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.config.llvm.clang.linux.lib.release.422056781" name="Release" parent="cdt.managedbuild.config.llvm.clang.linux.lib.release">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.lib.release.422056781." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.lib.release.627258015" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.lib.release">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.lib.release.1321691340" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.lib.release"/>
							<builder buildPath="${workspace_loc:/CppVectorLib}/Release" id="cdt.managedbuild.target.llvm.clang.linux.builder.lib.release.2072655704" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.lib.release"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.release.237102867" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.release"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.577913481" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.release.897940147" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.284493733" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1139469307" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.2001276304" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1589643378" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppContainerCommon}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1738201183" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.release.817748608" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.655394728" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.556480585" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.605179877" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1112343389" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppContainerCommon}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../CppContainerCommon/include&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.380631879" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.release.613984785" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.release"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.release.2108394501" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.release"/>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings">
				<externalSettings containerId="CppContainerCommon;cdt.managedbuild.config.llvm.clang.linux.lib.release.921603977" factoryId="org.eclipse.cdt.core.cfg.export.settings.sipplier">
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppContainerCommon"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppContainerCommon/Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppContainerCommon" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
			</storageModule>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="CppVectorLib.cdt.managedbuild.target.llvm.clang.linux.lib.904527034" name="Static Library" projectType="cdt.managedbuild.target.llvm.clang.linux.lib"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
</cproject>
